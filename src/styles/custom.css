/* Ensure full viewport centering */
.preloader-container {
  display: flex;
  align-items: center;
  justify-content: center;
  flex-direction: column;
  background: #141221;
  height: 100vh;
  width: 100vw;
  position: relative;
}

.fill {
  backface-visibility: hidden;
  z-index: 20;
  position: relative;
  width: 250px;
  height: 250px;
  border-radius: 50%; /* Keep circular */
  overflow: hidden;
  transform: rotate(-45deg);
  box-shadow: 0 0 30px 0 #0000ff inset;
}

.gooey-container {
  filter: url(#gooey-fill);
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 300px;
  height: 300px;
  padding: 0;
  margin: 0;
  box-shadow: 0 0 0 18px #0000ff inset;
  border-radius: 50%; /* Ensures it's a circle */
  overflow: hidden;
}

.level {
  display: block;
  margin: 0 auto;
  position: absolute;
  top: 300px;
  left: 50%;
  width: 500px;
  height: 350px;
  text-align: center;
  background: linear-gradient(135deg, #A06AF8, #F6FFBC, #3B1AE5);
  transform-origin: 50% 0;
  transform: translate3d(-413px, -53px, 0) rotate(45deg);
  animation: fill-level 5s linear infinite;
  box-shadow: 0 0 100px 0 #0000ff inset, 0 0 200px 0 #0000ff inset;
}

.plasma_bubble {
  content: "";
  display: inline-block;
  width: 3rem;
  height: 3rem;
  border-radius: 50%;
  transform-origin: 50% 50%;
  box-shadow: 0 0 30px 20px #F6FFBC inset;
  animation: fill-plasma_bubble 6s ease infinite;
}

@for $i from 1 through 8 {
  .bubble:nth-child(#{$i}) {
    width: (20px * $i); /* Increase width of each bubble dynamically */
    height: (20px * $i); /* Increase height proportionally */
    animation: fill-plasma_bubble 6s * ($i / 2) ease 0.5s / $i infinite; /* Vary duration and delay */
  }
}

@keyframes fill-level {
  0% {
    transform: translate3d(-413px, -53px, 0) rotate(45deg);
  }
  100% {
    transform: translate3d(-203px, -263px, 0) rotate(55deg);
  }
}

@keyframes fill-plasma_bubble {
  0% {
    transform: translate3d(-100px, -20px, 0) rotate(0deg);
  }
  50% {
    transform: translate3d(100px, -40px, 0) rotate(180deg);
  }
  100% {
    transform: translate3d(-100px, -20px, 0) rotate(360deg);
  }
}

/* Countdown Text */
.preloader-text {
  color: #A06AF8;
  font-family: "Bely", sans-serif;
  font-size: 2rem;
  font-weight: bold;
  text-align: center;
  margin-top: 50px;
}

  /* Rotating the outer group */
#outer-group {
    animation: rotate 5s infinite linear;
  }
  
  /* Keeping the inner group static */
  #inner-group {
    transform: none; 
  }
  
  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
    /* NavItem Styles */
.nav-item {
  height: 54px;
  padding: 0 24px;
  background-color: #141221;
  border-radius: 9999px;
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
  transition: background-color 0.4s ease-in-out;
  position: relative;
  overflow: hidden;
  width: fit-content;
  border: none;
}

.nav-text {
  color: #fcfbff;
  font-size: 1.125rem;
  font-family: 'Greycliff CF', sans-serif;
  z-index: 3;
  transition: color 0.4s ease-in-out;
}

.nav-item::before {
  background-color: #f4f3ff;
  border-radius: 9999px;
  box-sizing: border-box;
  transition: transform 0.5s ease-in-out;
  z-index: 1;
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  transform: translateX(-105%);
}

.nav-item:hover {
  z-index: 2;
}

.nav-item:hover::before {
  transform: translateX(0);
}

.nav-item:hover .nav-text {
  color: #141221;
}

/* Active State */
.nav-item.active {
  background-color: #f4f3ff;
}

.nav-item.active .nav-text {
  color: #141221;
}

/* custom cursor */
.cursor {
  position: fixed; 
  pointer-events: none; 
  border-radius: 50%;
  z-index: 9999; 
}

.cursor--large {
  width: 2rem;
  height: 2rem;
  border: 1px solid #E9CDFF;
  opacity: 0.5;
  mix-blend-mode: difference;
}

.cursor--small {
  width: .5rem;
  height: .5rem;
  background-color: #E9CDFF;
  mix-blend-mode: difference;
}
  
/* PrimaryButton Styles */
.primary-button {
    height: 54px;
    padding: 24px;
    background-color: #f4f3ff;
    border-radius: 9999px;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 10px;
    background-image: linear-gradient(90deg, #FFE9E9 0%, #A06AF8 100%); 
    background-size: 200% 200%;
    transition: background 0.5s ease;
    position: relative;
    overflow: hidden; 
  }
  
  .primary-button::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    background-image: linear-gradient(45deg, #A06AF8 0%, #FFE9E9 100%); 
    transition: opacity 0.5s ease;
    z-index: 0;
    opacity: 0; 
  }
  
  .primary-button:hover::after {
    opacity: 1; 
  }
  
  .primary-button-text {
    color: #141221;
    font-size: 1.125rem;
    font-weight: 500;
    font-family: 'Greycliff CF', sans-serif;
    position: relative;
    z-index: 1; 
  }  

  /* SecondaryButton Styles */
  .secondary-button {
    position: relative;
    height: 54px;
    padding: 24px;
    background-color: rgba(244, 243, 255, 0.15); 
    border-radius: 9999px; 
    border: 2px solid #f4f3ff;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden; 
    transition: border 0.3s ease;
  }
  
  .secondary-button:hover {
    animation: halo 1.5s infinite; 
  }
  
  .secondary-button-text {
    position: relative;
    z-index: 1; 
    color: #F4F3FF;
    font-size: 1.125rem;
    font-weight: 500;
    font-family: 'Greycliff CF', sans-serif;
    text-align: center;
  }
  
  /* Keyframes for halo tracing effect */
  @keyframes halo {
    0% {
      box-shadow: 0 0 10px rgba(160, 106, 248, 0.6), 
                  0 0 30px rgba(160, 106, 248, 0.4), 
                  0 0 60px rgba(160, 106, 248, 0.2);
    }
    25% {
      box-shadow: 0 0 15px rgba(160, 106, 248, 0.8), 
                  0 0 35px rgba(160, 106, 248, 0.5), 
                  0 0 65px rgba(160, 106, 248, 0.3);
    }
    50% {
      box-shadow: 0 0 20px rgba(160, 106, 248, 1), 
                  0 0 40px rgba(160, 106, 248, 0.6), 
                  0 0 70px rgba(160, 106, 248, 0.4);
    }
    75% {
      box-shadow: 0 0 15px rgba(160, 106, 248, 0.8), 
                  0 0 35px rgba(160, 106, 248, 0.5), 
                  0 0 65px rgba(160, 106, 248, 0.3);
    }
    100% {
      box-shadow: 0 0 10px rgba(160, 106, 248, 0.6), 
                  0 0 30px rgba(160, 106, 248, 0.4), 
                  0 0 60px rgba(160, 106, 248, 0.2);
    }
  }

/* MainHero section */
#main-hero {
  position: relative;
  background-color: #141221;
  overflow: visible;
}

/* Blob container positioned behind the content */
.blobs-container {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 0;
}

/* Blobs with gradient, movement, and gooey effect */
.blobs {
  position: absolute;
  background: linear-gradient(to top left, #3b1ae5, #a06af8);
  border-radius: 50%; /* Start with circular shape */
  filter: url("#gooey");
  mix-blend-mode: screen;
  opacity: 0.9;
  animation: blob-movement infinite ease-in-out;
  animation-duration: 30s; /* Default duration */
}

/* Specific blob positions based on Figma */
.blob-1 {
  width: 17rem;
  height: 17rem;
  left: 123px;
  top: 161px;
  animation-duration: 14s;
  /* border-radius: 40% 60% 70% 50%;  */
  border-radius: 100%; 
}

.blob-2 {
  width: 7rem;
  height: 7rem;
  left: 470px;
  top: 416px;
  animation-duration: 28s;
  /* border-radius: 50% 60% 60% 40%; */
  border-radius: 100%;
}

.blob-3 {
  width: 12rem;
  height: 12rem;
  left: 229px;
  top: 497px;
  animation-duration: 20s;
  /* border-radius: 60% 50% 60% 50%; */
  border-radius: 100%;
}

.blob-4 {
  width: 30rem;
  height: 30rem;
  left: 935px;
  top: 161px;
  animation-duration: 24s;
  /* border-radius: 50% 60% 50% 70%; */
  border-radius: 100%;
}

.blob-5 {
  width: 18rem;
  height: 18rem;
  left: 843px;
  top: 610px;
  animation-duration: 34s;
  /* border-radius: 70% 50% 60% 40%; */
  border-radius: 100%;
}

/* Keyframes for blob movement */
@keyframes blob-movement {
  0% {
    transform: translate(0, 0) scale(1);
  }
  50% {
    transform: translate(100px, -100px) scale(1.4);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}
